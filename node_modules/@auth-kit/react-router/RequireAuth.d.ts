import * as React from 'react';
/**
 * Component Props for Require Auth
 */
interface RequireAuthProps {
    /**
     * Children component which will require auth to access
     */
    children: JSX.Element;
    /**
     * Path to redirect if the user is not authenticated
     *
     * @example
     * `/login`
     */
    fallbackPath: string;
}
/**
 * RequireAuth provides a solution for implementing auth on per-component basis
 * for private route solutions using the react-router-dom route system
 *
 * @example
 *
 * ```jsx
 * const RoutesComponent = () => {
 *  return (
 *    <BrowserRouter>
 *      <Routes>
 *        <Route path={'/'} element={<Home/>}/>
 *        <Route path={'/login' } element={<Login/>}/>
 *        <Route path={'/secure'} element={
 *          <RequireAuth fallbackPath={'/login'}>
 *            <SecureComponent/>
 *          </RequireAuth>
 *        }/>
 *      </Routes>
 *    </BrowserRouter>
 *  )
 * }
 * ```
 */
declare const RequireAuth: React.FC<RequireAuthProps>;
export default RequireAuth;
