"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactRouter = require("react-router");
var _AuthContext = _interopRequireDefault(require("react-auth-kit/AuthContext"));
var _reducers = require("react-auth-kit/utils/reducers");
var _errors = require("react-auth-kit/errors");
var _utils = require("react-auth-kit/utils/utils");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var RequireAuth = function RequireAuth(_ref) {
  var children = _ref.children,
    fallbackPath = _ref.fallbackPath;
  var context = React.useContext(_AuthContext.default);
  if (context === null) {
    throw new _errors.AuthError('Auth Provider is missing. ' + 'Make sure, you are using this component inside the auth provider.');
  }
  if (!(0, _utils.isAuthenticated)(context.value)) {
    context.set((0, _reducers.doSignOut)());
    return (0, _jsxRuntime.jsx)(_reactRouter.Navigate, {
      to: fallbackPath,
      replace: true
    });
  }
  return children;
};
var _default = exports.default = RequireAuth;